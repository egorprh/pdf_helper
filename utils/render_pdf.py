#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä Playwright —Å –∏–¥–µ–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è A4.
–£–±–∏—Ä–∞–µ—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–æ–ª–Ω—É—é –ø–ª–æ—â–∞–¥—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
"""

import asyncio
from playwright.async_api import async_playwright
import os
from pathlib import Path

async def html_to_pdf_playwright(html_file_path: str, output_pdf_path: str, css_file_path: str = None) -> bool:
    """–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å HTML —Ñ–∞–π–ª –≤ PDF —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º A4.
    
    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        html_file_path: –ü—É—Ç—å –∫ HTML —Ñ–∞–π–ª—É –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è.
        output_pdf_path: –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–≥–æ PDF —Ñ–∞–π–ª–∞.
        css_file_path: –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ CSS —Ñ–∞–π–ª—É –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏.
    
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        True, –µ—Å–ª–∏ PDF —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω; False, –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.
    """
    
    try:
        # –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        html_path = Path(html_file_path).expanduser().resolve()
        if not html_path.exists() or not html_path.is_file():
            print(f"‚ùå HTML —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {html_path}")
            return False

        output_path = Path(output_pdf_path).expanduser().resolve()
        
        # –°–æ–∑–¥–∞–¥–∏–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        output_path.parent.mkdir(parents=True, exist_ok=True)

        # –ü—Ä–æ–≤–µ—Ä–∏–º CSS —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω —É–∫–∞–∑–∞–Ω
        if css_file_path:
            css_path = Path(css_file_path).expanduser().resolve()
            if not css_path.exists() or not css_path.is_file():
                print(f"‚ö†Ô∏è CSS —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {css_path}. –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω HTML –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö —Å—Ç–∏–ª–µ–π.")
                css_file_path = None

        print(f"üîÑ –ù–∞—á–∏–Ω–∞—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é HTML –≤ PDF —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º A4...")
        print(f"üìÑ HTML —Ñ–∞–π–ª: {html_path}")
        if css_file_path:
            print(f"üé® CSS —Ñ–∞–π–ª: {css_path}")
        print(f"üìã –í—ã—Ö–æ–¥–Ω–æ–π PDF: {output_path}")
        
        async with async_playwright() as p:
            # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –≤ headless —Ä–µ–∂–∏–º–µ
            browser = await p.chromium.launch(headless=True)
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π –ø–ª–æ—Ç–Ω–æ—Å—Ç—å—é —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
            context = await browser.new_context(device_scale_factor=2)
            page = await context.new_page()
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º HTML —Ñ–∞–π–ª
            await page.goto(f"file://{html_path}")
            
            # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
            await page.wait_for_load_state('networkidle')
            
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è A4 —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∫–∞—á–µ—Å—Ç–≤–æ–º
            pdf_options = {
                'path': str(output_path),
                'format': 'A4',
                'margin': {
                    'top': '0',
                    'right': '0',
                    'bottom': '0',
                    'left': '0'
                },
                'print_background': True,  # –í–∫–ª—é—á–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–µ —Ü–≤–µ—Ç–∞ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                'prefer_css_page_size': False,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã A4
                'scale': 1.3348,  # –ß—Ç–æ–±—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–∏—Ç—å A4
                'display_header_footer': False,  # –û—Ç–∫–ª—é—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ —Ñ—É—Ç–µ—Ä—ã –±—Ä–∞—É–∑–µ—Ä–∞
                'header_template': '',  # –ü—É—Å—Ç–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
                'footer_template': '',  # –ü—É—Å—Ç–æ–π —Ñ—É—Ç–µ—Ä
            }
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF
            await page.pdf(**pdf_options)
            
            await context.close()
            await browser.close()
        
        print(f"‚úÖ PDF —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: {output_path}")
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ HTML –≤ PDF: {str(e)}")
        return False


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏."""
    
    # –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
    html_file = "invoice_html/pdf.html"
    css_file = "invoice_html/styles.css"
    output_pdf = "invoice_html/invoice.pdf"
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—É—Ç–∏
    current_dir = os.path.dirname(os.path.abspath(__file__))
    html_path = os.path.join(current_dir, html_file)
    css_path = os.path.join(current_dir, css_file)
    pdf_path = os.path.join(current_dir, output_pdf)
    
    print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Playwright —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º A4")
    print("=" * 60)
    
    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
    success = await html_to_pdf_playwright(
        html_file_path=html_path,
        output_pdf_path=pdf_path,
        css_file_path=css_path
    )
    
    if success:
        print("\nüéâ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìÅ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª: {pdf_path}")
        print("\nüí° –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è A4:")
        print("   - format: 'A4'")
        print("   - margin: 0 (–±–µ–∑ –æ—Ç—Å—Ç—É–ø–æ–≤)")
        print("   - prefer_css_page_size: False")
        print("   - scale: 1.3348 (100%)")
        print("   - display_header_footer: False")
        print("   - CSS: .container { width: 100%; height: 100%; padding: 42px 33px; }")
        print("   - CSS: .page { width: 210mm; height: 297mm; }")
    else:
        print("\n‚ùå –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å")


if __name__ == "__main__":
    asyncio.run(main())
